/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        
        if (root == null) return result;
        
        Deque<TreeNode> deque = new ArrayDeque<TreeNode>();
        deque.add(root);
        int count = 1;
        
        while (!deque.isEmpty()) {
            List<Integer> list = new ArrayList<Integer>();
            int currentCount = 0; 
            int nextCount = 0;
            
            while (currentCount < count) {
                TreeNode node = deque.poll();
                list.add(node.val);
                currentCount++;
                if (node.left != null) {
                    deque.add(node.left);
                    nextCount++;
                }
                if (node.right != null) {
                    deque.add(node.right);
                    nextCount++;
                }
            }
            result.add(list);
            count = nextCount;
        }
        
        return result;
    }
}